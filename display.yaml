
number:
  - platform: template
    name: "Screen Off Delay"
    min_value: 0
    max_value: 120
    initial_value: '0'
    STEP: 1
    on_value_range:
      above: $gesture_prox_off_delay
      then:
        - binary_sensor.template.publish: 
          id: sauna_utility_display
          state: OFF

time:
  - platform: sntp
    on_time:
      # keep a counter to turn off screen
      - seconds: 1/1
        then:
          - number.increment: scn_off_delay


display:
  - platform: ssd1306_i2c
    model: "SH1106 128x64"
    rotation: 180
    address: 0x3C
    id: $display_id
    lambda: |-
      if (id(element_1).state) {
        it.print(0, 0, id(my_font), "Element1: ON");
      } else {
        it.print(0, 0, id(my_font), "Element1: OFF");
      }
      if (id(element_2).state) {
        it.print(0, 20, id(my_font), "Element2: ON");
      } else {
        it.print(0, 20, id(my_font), "Element2: OFF");
      }
      if (id(element_3).state) {
        it.print(0, 40, id(my_font), "Element3: ON");
      } else {
        it.print(0, 40, id(my_font), "Element3: OFF");
      }

mcp23008:
  - id: 'mcp23008_hub'
    address: 0x20


font:
  - file: "gfonts://Roboto"
    id: my_font
    size: 15


binary_sensor:
  - platform: gpio
    name: "Sauna Heating Element 1 Button"
    icon: "mdi:radiobox-marked"
    id: button_0
    pin:
      mcp23xxx: mcp23008_hub
      number: 0
      mode:
        input: true
        pullup: true
      inverted: true
    on_press:
    - switch.toggle: element_1
    - binary_sensor.template.publish: 
          id: sauna_utility_display
          state: ON

  - platform: gpio
    name: "Sauna Heating Element 2 Button"
    icon: "mdi:radiobox-marked"
    id: button_1
    pin:
      mcp23xxx: mcp23008_hub
      number: 1
      mode:
        input: true
        pullup: true
      inverted: true 
    on_press:
    - switch.toggle: element_2
    - binary_sensor.template.publish: 
          id: sauna_utility_display
          state: ON
      
  - platform: gpio
    name: "Sauna Heating Element 3 Button"
    icon: "mdi:radiobox-marked"
    id: button_2
    pin:
      mcp23xxx: mcp23008_hub
      number: 2
      mode:
        input: true
        pullup: true
      inverted: true
    on_press:
    - switch.toggle: element_3
    - binary_sensor.template.publish: 
          id: sauna_utility_display
          state: ON
 
  - platform: template
    name: "Sauna Utility Display"
    id: sauna_utility_display
    on_state:
       if:
            condition:
              - binary_sensor.is_on: sauna_utility_display
            then:
              - lambda: id($display_id).turn_on();
              - number.to_min: scn_off_delay
            else:
              - lambda: id($display_id).turn_off(); 




switch:
  - platform: gpio
    restore_mode: ALWAYS_OFF
    name: "Sauna Heating Element 1 Green Led"
    icon: "mdi:alarm-light-outline"
    id: green_led
    pin:
      mcp23xxx: mcp23008_hub
      number: 4
      mode:
        output: true
      inverted: false    
  
  - platform: gpio
    restore_mode: ALWAYS_OFF
    name: "Sauna Heating Element 2 Yellow Led"
    icon: "mdi:alarm-light-outline"
    id: yellow_led
    pin:
      mcp23xxx: mcp23008_hub
      number: 5
      mode:
        output: true
      inverted: false
      
  - platform: gpio
    restore_mode: ALWAYS_OFF
    name: "Sauna Heating Element 3 Red Led"
    icon: "mdi:alarm-light-outline"
    id: red_led
    pin:
      mcp23xxx: mcp23008_hub
      number: 6
      mode:
        output: true
      inverted: false   

  - platform: gpio
    restore_mode: ALWAYS_OFF
    name: "Sauna Buzzer"
    icon: "mdi:bell-alert"
    id: buzzer
    pin: 
      mcp23xxx: mcp23008_hub
      number: 7
      mode:
        output: true
      inverted: false   
    on_turn_on:
    - delay: 500ms
    - switch.turn_off: buzzer    
 