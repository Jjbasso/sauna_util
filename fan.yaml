esphome:
  libraries:
    - Wire
    - SPI
    - "Adafruit BusIO"
    - "Adafruit EMC2101"
  includes:
    #- 5c53de3b_esphome/packages/9484f30d/esphome/components/emc2101/fan_controller.h
    
sensor:
   # Setup fan sensors
  - platform: custom
    lambda: |-
      auto sauna_util_fan_controller = new emc2101_sensors();
      App.register_component(sauna_util_fan_controller);
      return {sauna_util_fan_controller->internal_temperature_sensor, sauna_util_fan_controller->external_temperature_sensor, sauna_util_fan_controller->rpm_sensor};

    sensors:
    - name: "Sauna Utility Processor Temperature"
      unit_of_measurement: "°F"
      device_class: "temperature"
      state_class: "measurement"

    - name: "Sauna Utility External Temperature"
      unit_of_measurement: "°F"
      device_class: "temperature"
      state_class: "measurement"
      on_value_range:
      - above: $display_alarm_threshold
        then:
          - output.turn_on: buzzer
      - below: $display_alarm_threshold
        then:
          - output.turn_off: buzzer

    - name: "Sauna Utility Fan RPM"
      unit_of_measurement: "rpm"
      state_class: "measurement"

output:
  - platform: custom
    type: float
    lambda: |-
      auto sauna_utility_fan_speed = new emc2101_fan_speed();
      App.register_component(sauna_utility_fan_speed);
      return {sauna_utility_fan_speed};    
    
    outputs:
      id: sauna_utility_fan_speed

fan:
  - platform: speed
    output: sauna_utility_fan_speed
    name: "Sauna Utility Fan Speed"
